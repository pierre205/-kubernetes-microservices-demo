apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: microservices-demo
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        upstream user_service {
            server user-service:3001;
        }
        
        upstream product_service {
            server product-service:3002;
        }
        
        upstream order_service {
            server order-service:3003;
        }
        
        server {
            listen 80;
            
            location /health {
                return 200 'API Gateway OK';
                add_header Content-Type text/plain;
            }
            
            location /api/users/ {
                proxy_pass http://user_service/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
            }
            
            location /api/products/ {
                proxy_pass http://product_service/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
            }
            
            location /api/orders/ {
                proxy_pass http://order_service/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
            }
            
            location / {
                return 404 'API Gateway - Route not found';
            }
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: microservices-demo
  labels:
    app: api-gateway
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: microservices-demo
  labels:
    app: api-gateway
spec:
  type: LoadBalancer  # Ou NodePort selon votre environnement
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  selector:
    app: api-gateway
---
